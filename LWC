The JavaScript file for a Lightning web component must include at least this code, where MyComponent is the name you assign your component class.

import { LightningElement } from 'lwc';
export default class MyComponent extends LightningElement {
}
The export statement defines a class that extends the LightningElement class. As a best practice, the name of the class usually matches the file name of the JavaScript class

ecorators are often used in JavaScript to extend the behavior of a class, property, getter, setter, or method.

Examples of Lightning Web Component decorators include:

@api: Marks a property as public for use in your template or other components.
@track: Marks a property for internal monitoring. A template or function using this property forces a component to rerender when the propertyâ€™s value changes. Use this to store values locally, especially as a user interacts with your component.
@wire: Gives you a way to get and bind data. This implementation simplifies getting data from a Salesforce org.
You can import multiple decorators. Like:

import { LightningElement, track, api } from 'lwc';

the connectedCallback() is invoked when a component is inserted into the DOM. 
The disconnectedCallback() is invoked when a component is removed from the DOM.
